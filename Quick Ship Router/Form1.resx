<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>